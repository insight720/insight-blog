<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.project.blog.mapper.PhotoAlbumMapper">

    <resultMap id="BaseResultMap" type="pers.project.blog.entity.PhotoAlbumEntity">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="albumName" column="album_name" jdbcType="VARCHAR"/>
        <result property="albumDesc" column="album_desc" jdbcType="VARCHAR"/>
        <result property="albumCover" column="album_cover" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" jdbcType="TINYINT"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,album_name,album_desc,
        album_cover,is_delete,status,
        create_time,update_time
    </sql>

    <select id="listAdminPhotoAlbumDTOs" resultType="pers.project.blog.dto.AdminPhotoAlbumDTO">
        SELECT photo_album.id, photo_album.album_name, photo_album.album_desc, photo_album.album_cover,
        COUNT(photo.id) photo_count, photo_album.`status`
        FROM
        (SELECT id, album_name, album_desc, album_cover, `status`
        FROM tb_photo_album
        WHERE is_delete = 0
        <if test="conditionVO.keywords != null">
            AND album_name LIKE CONCAT('%', #{conditionVO.keywords}, '%')
        </if>
        ORDER BY id DESC
        LIMIT #{offset}, #{size}
        ) photo_album
        LEFT JOIN
        (SELECT id, album_id
        FROM tb_photo
        WHERE is_delete = 0) photo
        ON photo_album.id = photo.album_id
        GROUP BY photo_album.id
    </select>

</mapper>
